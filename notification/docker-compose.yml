# Use root/example as user/password credentials
version: '3.1'

services:
  # redis:6.0
  #   image: redis
  #   ports:
  #     - "6379:6379"

  notification:
    build:
      dockerfile: notification_app
    container_name: notification_app
    restart: always
    image:
      notification-image:latest
    expose:
      - 8000
    env_file:
      - ./.env.example
    networks:
      - notification_network
      - service_network
    depends_on:
      - mongo
      - mongo-express
      - rabbitmq

  notification_worker:
    build:
      dockerfile: notification_worker
    container_name: notification_worker
    restart: always
    image:
      notification-worker-image:latest
    env_file:
      - ./.env.example
    networks:
      - notification_network
    depends_on:
      - rabbitmq

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - notification_network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - notification_network

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: 'admin'
      RABBITMQ_DEFAULT_PASS: 'qwe123'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:15672",
        ]
      interval: 5s
      timeout: 10s
      retries: 120
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - notification_network


networks:
  notification_network:
    name: notification_network
  service_network:
    name: service_network
    external: True
